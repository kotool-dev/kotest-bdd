name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    name: Test on Ubuntu
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
    permissions:
      contents: write
      checks: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew check

      - name: Test Report
        if: (success() || failure())
        uses: dorny/test-reporter@v1
        with:
          name: Unit Test Results
          path: ./**/build/test-results/**/*.xml
          reporter: java-junit

      - name: Bump version and push tag
        if: success()
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ''

      - name: Create a GitHub release
        if: success()
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  build:
    name: Build on ${{ matrix.os }}
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    permissions:
      contents: write
      checks: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Update version in build.gradle.kts
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            sed -i '' 's/val version = ".*"/val version = "${{ needs.test.outputs.new_tag }}"/' library/build.gradle.kts
          else
            sed -i 's/val version = ".*"/val version = "${{ needs.test.outputs.new_tag }}"/' library/build.gradle.kts
          fi

      - name: Build targets for ${{ matrix.os }}
        run: ./gradlew library:publishToMavenCentral
        env:
          CENTRAL_PORTAL_USERNAME: ${{ secrets.CENTRAL_PORTAL_USERNAME }}
          CENTRAL_PORTAL_PASSWORD: ${{ secrets.CENTRAL_PORTAL_PASSWORD }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
